{
  "version": "",
  "name": "XData",
  "scopeName": "source.xdata",
  "fileTypes": [
    "xdata"
  ],
  "patterns": [
    {
      "include": "#key"
    },
    {
      "include": "#carat_separator"
    },
    {
      "include": "#stringBlock"
    },
    {
      "include": "#type"
    },
    {
      "include": "#atom"
    },
    {
      "include": "#number"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#inlineString"
    },
    {
      "match": "(?:(?<=:\\s)|(?<=>\\s))(..*)",
      "captures": {
        "1": {
          "name": "string.unquoted.xdata"
        }
      }
    }
  ],
  "repository": {
    "atom": {
      "match": "(@)([\\w]+)",
      "captures": {
        "1": {
          "name": "punctuation.section.xdata constant.language.atom.xdata"
        },
        "2": {
          "name": "constant.language.atom.xdata"
        }
      }
    },
    "carat_separator": {
      "match": "^ *(>)(?: |(?=\\n))",
      "captures": {
        "1": {
          "name": "punctuation.separator.key-value.xdata"
        }
      }
    },
    "comment": {
      "match": "(#) .+",
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.xdata"
        }
      },
      "name": "comment.line.number-sign.xdata"
    },
    "escapeCharacter": {
      "match": "\\.",
      "name": "constant.character.escape.xdata"
    },
    "inlineString": {
      "patterns": [
        {
          "include": "#inlineStringLiteral"
        },
        {
          "include": "#inlineStringLiteralTriple"
        },
        {
          "include": "#inlineStringEscapable"
        }
      ]
    },
    "inlineStringEscapable": {
      "match": "(\")((?:[^\\\"\\\\]|\\\\.)*)(\")",
      "captures": {
        "1": {
          "name": "punctuation.definition.string.xdata string.quoted.double.xdata"
        },
        "2": {
          "name": "string.quoted.double.xdata"
        },
        "3": {
          "name": "punctuation.definition.string.xdata string.quoted.double.xdata"
        }
      }
    },
    "inlineStringLiteral": {
      "match": "(')([^']+)(')",
      "captures": {
        "1": {
          "name": "punctuation.definition.string.xdata string.quoted.single.xdata"
        },
        "2": {
          "name": "string.quoted.single.xdata"
        },
        "3": {
          "name": "punctuation.definition.string.xdata string.quoted.single.xdata"
        }
      }
    },
    "inlineStringLiteralTriple": {
      "match": "(''')(.+?'?'?)(''')",
      "captures": {
        "1": {
          "name": "punctuation.definition.string.xdata string.quoted.single.xdata"
        },
        "2": {
          "name": "string.quoted.single.xdata"
        },
        "3": {
          "name": "punctuation.definition.string.xdata string.quoted.single.xdata"
        }
      }
    },
    "key": {
      "match": "(?:(?:(@)([\\w]+))|(-?\\d+(?:(\\.)\\d+)?)|((')([^']+)('))|(?:(\")((?:[^\\\"\\\\]|\\\\.)*)(\"))|(\\w+))(?: *+(\\()([\\w\\/]+)(\\)))? *+(:)",
      "captures": {
        "1": {
          "name": "punctuation.section.xdata constant.language.atom.xdata"
        },
        "2": {
          "name": "constant.language.atom.xdata"
        },
        "3": {
          "name": "constant.numeric.xdata"
        },
        "4": {
          "name": "constant.numeric.decimal.xdata"
        },
        "5": {
          "name": ""
        },
        "6": {
          "name": "punctuation.definition.string.xdata string.quoted.single.xdata"
        },
        "7": {
          "name": "string.quoted.single.xdata"
        },
        "8": {
          "name": "punctuation.definition.string.xdata string.quoted.single.xdata"
        },
        "9": {
          "name": "punctuation.definition.string.xdata string.quoted.double.xdata"
        },
        "10": {
          "name": "string.quoted.double.xdata"
        },
        "11": {
          "name": "punctuation.definition.string.xdata string.quoted.double.xdata"
        },
        "12": {
          "name": "string.unquoted.xdata"
        },
        "13": {
          "name": "punctuation.section.xdata storage.type.xdata"
        },
        "14": {
          "name": "storage.type.name.xdata"
        },
        "15": {
          "name": "punctuation.section.xdata storage.type.xdata"
        },
        "16": {
          "name": "punctuation.separator.key-value.xdata"
        }
      },
      "name": "meta.key.xdata"
    },
    "number": {
      "match": "-?\\d+(?:(\\.)\\d+)?",
      "captures": {
        "1": {
          "name": "constant.numeric.decimal.xdata"
        }
      },
      "name": "constant.numeric.xdata"
    },
    "stringBlock": {
      "patterns": [
        {
          "include": "#stringBlockLiteral"
        },
        {
          "include": "#stringBlockEscapable"
        }
      ]
    },
    "stringBlockEscapable": {
      "begin": "(?<=:) *+(?:(\\()([\\w\\/]+)(\\)) *+)?(\") *\\n",
      "end": "(?=.|\\n)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.section.xdata storage.type.xdata"
        },
        "2": {
          "name": "storage.type.name.xdata"
        },
        "3": {
          "name": "punctuation.section.xdata storage.type.xdata"
        },
        "4": {
          "name": "punctuation.definition.string.xdata string.quoted.double.xdata"
        }
      },
      "endCaptures": {
      },
      "patterns": [
        {
          "begin": "\\G(\\s+)",
          "while": "\\1",
          "beginCaptures": {
            "1": {
              "name": "indentation.start.xdata"
            }
          },
          "whileCaptures": {
          },
          "name": "meta.block.string.inner.xdata",
          "patterns": [
            {
              "match": ".*\\n",
              "name": "string.quoted.double.block.xdata"
            }
          ]
        }
      ],
      "applyEndPatternLast": 1
    },
    "stringBlockLiteral": {
      "begin": "(?<=:) *+(?:(\\()([\\w\\/]+)(\\)) *+)?(') *\\n",
      "end": "(?=.|\\n)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.section.xdata storage.type.xdata"
        },
        "2": {
          "name": "storage.type.name.xdata"
        },
        "3": {
          "name": "punctuation.section.xdata storage.type.xdata"
        },
        "4": {
          "name": "punctuation.definition.string.xdata string.quoted.single.xdata"
        }
      },
      "endCaptures": {
      },
      "patterns": [
        {
          "begin": "\\G(\\s+)",
          "while": "\\1",
          "beginCaptures": {
            "1": {
              "name": "indentation.start.xdata"
            }
          },
          "whileCaptures": {
          },
          "name": "meta.block.string.inner.xdata",
          "patterns": [
            {
              "match": ".*\\n",
              "name": "string.quoted.single.block.xdata"
            }
          ]
        }
      ],
      "applyEndPatternLast": 1
    },
    "type": {
      "match": "(\\()([\\w\\/]+)(\\))",
      "captures": {
        "1": {
          "name": "punctuation.section.xdata storage.type.xdata"
        },
        "2": {
          "name": "storage.type.name.xdata"
        },
        "3": {
          "name": "punctuation.section.xdata storage.type.xdata"
        }
      }
    }
  }
}